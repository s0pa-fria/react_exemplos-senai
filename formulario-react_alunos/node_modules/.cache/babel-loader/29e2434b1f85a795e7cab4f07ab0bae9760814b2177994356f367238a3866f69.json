{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DEV_2ano_2024\\\\Documents\\\\GitHub\\\\react_exemplos-senai\\\\formulario-react_alunos\\\\src\\\\components\\\\forms\\\\form.js\",\n  _s = $RefreshSig$();\n// Importa o React e os Hooks necessários do React\nimport React, { useState } from 'react';\n// Importa o hook useFrom do react-hook-from para lidar com formulários de maneira eficiente\n// Obs: Para instalar (npm install react-hook-form)\nimport { useForm } from 'react-hook-form';\n// Importa o arquivo de estilo CSS\nimport '../css/style.css';\n// Importa a imagem de fundo do login\nimport minhaImagem from '../images/login.jpg';\n// Importa a imagem de verificação\nimport verified from '../images/verified.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyForm() {\n  _s();\n  // Desestruturação do objeto retornado pelo hook useForm\n  // formState é um objeto que contém o estado formulário, e errors é uma propriedade desse objeto\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  // Estado local para controlar o estado do formulário\n  const [status, setStatus] = useState({\n    submittedSuccessfully: false,\n    loading: false,\n    showPassword: flase\n  });\n\n  // Função que é chamada quando o formulário é enviado\n  const onSubmit = data => {\n    // {...status }: O operador de programação (...) é utilizado para criar uma cópia do estado atual (status). Isso é feito para garantir que não estamos modificando diretamente o estado anterior, respeitando o princípio de imutabilidade no React.\n    setStatus({\n      ...status,\n      loading: true\n    }); // Atualiza o estado para indicar que está carregando\n\n    // Simula um tempo de espera antes de atualizar o estado para sucesso\n    setTimeout(() => {\n      setStatus({\n        submittedSuccessfully: true,\n        loading: false\n      });\n    }, 1000);\n  };\n\n  // Função para gerar mensagens d erro com base no nome do campo\n  const generateErrorMessage = fieldName => {\n    return {\n      required: `${fieldName} é obrigatório`,\n      // Mensagem para campos obrigatórios\n      pattern: fieldName === 'email' ? 'Formato de e-mail inválido' : null //Mensagem para formato de e-mail inválido\n    };\n  };\n\n  // Função para lidar com o retorno à página inicial\n  const handleReturnButtonClick = () => {\n    // Redireciona para a página inicial\n    window.location.href = '/';\n  };\n\n  // renderização condicional (usandon ternário ?) com base no sucesso do envio do formulário\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: status.submittedSuccessfully ?\n    /*#__PURE__*/\n    // Se o formulário foi enviado com sucesso, exibe uma mensagem de sucesso\n    _jsxDEV(\"div\", {\n      className: \"sucess-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: verified,\n        alt: \"Verificado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Formul\\xE1rio Enviado com Sucesso!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Obrigado por enviar o formul\\xE1rio.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: handleReturnButtonClick,\n        children: \"Retornar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this) :\n    /*#__PURE__*/\n    // Se o formulário ainda não foi enviado com sucesso, exibe o formulário para preenchimento\n    _jsxDEV(\"div\", {\n      className: \"form-sign-up\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: minhaImagem,\n          alt: \"imagem de uma pessoa se cadastrando pelo celular\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Inscrva-se\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit(onSubmit),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"firtsName\", generateErrorMessage(\"Nome\")),\n              placeholder: \"Nome\",\n              id: \"name\",\n              autoComplete: \"off\",\n              className: errors.firstName ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this), errors.firstName && /*#__PURE__*/_jsxDEV(\"span\", {\n              classname: \"error-message\",\n              children: errors.firstName.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"sobrenome\",\n              children: \"Sobrenome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"lastName\", generateErrorMessage(\"Sobrenome\")),\n              placeholder: \"Sobrenome\",\n              id: \"sobrenome\",\n              autoComplete: \"off\",\n              className: errors.lastName ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this), errors.lastName && /*#__PURE__*/_jsxDEV(\"span\", {\n              classname: \"error-message\",\n              children: errors.lastName.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlfor: \"email\",\n              children: \"E-mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              ...register(\"email\", generateErrorMessage(\"E-mail\")),\n              placeholder: \"E-mail\",\n              id: \"email\",\n              autoComplete: \"off\",\n              className: errors.email ? 'error' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error.message\",\n              children: errors.email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlfor: \"password\",\n              children: \"Senha\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"password-input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ...register(\"password\", generateErrorMessage(\"Senha\")),\n                placeholder: \"Senha\",\n                id: \"password\",\n                autoComplete: \"off\",\n                type: status.showPassword ? 'text' : 'password',\n                className: errors.password ? 'error' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\" //Define o tipo do botão como \"button\" para evitar comportamento padrão de envio de formulário\n                ,\n                className: \"password-toggle\" // Adicionar a classe CSS 'passwor\n                ,\n                onClick: () => setStatus({\n                  ...status,\n                  showPassword: !status.showPassword\n                }),\n                children: status.showPassword ? /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-eye\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 56\n                }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-eye-slash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 89\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"error-message\",\n              children: errors.password.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            type: \"submit\",\n            disabled: status.loading,\n            children: status.loading ? 'Enviando...' : 'Enviar'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }, this), status.loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Carregando...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 40\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n// Exporta componente \"MyForm\"\n_s(MyForm, \"aKzv1V/YFjAlT7o2bnj4WN+oVcQ=\", false, function () {\n  return [useForm];\n});\n_c = MyForm;\nexport default MyForm;\nvar _c;\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"names":["React","useState","useForm","minhaImagem","verified","jsxDEV","_jsxDEV","MyForm","_s","register","handleSubmit","formState","errors","status","setStatus","submittedSuccessfully","loading","showPassword","flase","onSubmit","data","setTimeout","generateErrorMessage","fieldName","required","pattern","handleReturnButtonClick","window","location","href","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","htmlFor","placeholder","id","autoComplete","firstName","classname","message","lastName","htmlfor","email","type","password","disabled","_c","$RefreshReg$"],"sources":["C:/Users/DEV_2ano_2024/Documents/GitHub/react_exemplos-senai/formulario-react_alunos/src/components/forms/form.js"],"sourcesContent":["// Importa o React e os Hooks necessários do React\nimport React, {useState} from 'react';\n// Importa o hook useFrom do react-hook-from para lidar com formulários de maneira eficiente\n// Obs: Para instalar (npm install react-hook-form)\nimport {useForm} from 'react-hook-form';\n// Importa o arquivo de estilo CSS\nimport '../css/style.css';\n// Importa a imagem de fundo do login\nimport minhaImagem from '../images/login.jpg';\n// Importa a imagem de verificação\nimport verified from '../images/verified.png';\n\n\nfunction MyForm() {\n    // Desestruturação do objeto retornado pelo hook useForm\n    // formState é um objeto que contém o estado formulário, e errors é uma propriedade desse objeto\n    const { register, handleSubmit, formState: { errors } } = useForm();\n    // Estado local para controlar o estado do formulário\n    const [status, setStatus] = useState({ submittedSuccessfully: false, loading: false, showPassword: flase});\n\n    // Função que é chamada quando o formulário é enviado\n    const onSubmit = data => {\n        // {...status }: O operador de programação (...) é utilizado para criar uma cópia do estado atual (status). Isso é feito para garantir que não estamos modificando diretamente o estado anterior, respeitando o princípio de imutabilidade no React.\n        setStatus({ ...status, loading: true}); // Atualiza o estado para indicar que está carregando\n\n        // Simula um tempo de espera antes de atualizar o estado para sucesso\n        setTimeout(() => {\n            setStatus({ submittedSuccessfully: true, loading: false });\n        }, 1000);\n    }; \n\n    // Função para gerar mensagens d erro com base no nome do campo\n    const generateErrorMessage = fieldName => {\n        return {\n            required: `${fieldName} é obrigatório`, // Mensagem para campos obrigatórios\n            pattern: fieldName === 'email' ? 'Formato de e-mail inválido' : null //Mensagem para formato de e-mail inválido\n        };\n    };\n\n    // Função para lidar com o retorno à página inicial\n    const handleReturnButtonClick = () => {\n        // Redireciona para a página inicial\n        window.location.href = '/';\n    }; \n\n    // renderização condicional (usandon ternário ?) com base no sucesso do envio do formulário\n  return (\n    <div className='container'>\n        {status.submittedSuccessfully ?(\n            // Se o formulário foi enviado com sucesso, exibe uma mensagem de sucesso\n            <div className='sucess-message'>\n                <img src={verified} alt='Verificado' />\n                <h2>Formulário Enviado com Sucesso!</h2>\n                <p>Obrigado por enviar o formulário.</p>\n                <button className='btn' onClick={handleReturnButtonClick}>Retornar</button>\n            </div>\n        ) : (\n            // Se o formulário ainda não foi enviado com sucesso, exibe o formulário para preenchimento\n            <div className='form-sign-up'>\n                <div>\n                    <img src={minhaImagem} alt='imagem de uma pessoa se cadastrando pelo celular'/>\n                </div>\n\n                <section>\n                    <h1>Inscrva-se</h1>\n                    {/* Formulário com campos controlados pelo hookuseForm */}\n                  <form onSubmit={handleSubmit(onSubmit)}>\n\n                    {/* Campo Nome */}\n                    <div className='form flex'>\n                        <label htmlFor='name'>Nome</label>\n                        <input\n                            {...register(\"firtsName\", generateErrorMessage(\"Nome\"))}\n                            placeholder=\"Nome\"\n                            id='name'\n                            autoComplete='off'\n                            className={errors.firstName ? 'error' : ''}\n                        />\n                        {errors.firstName && <span classname='error-message'>{errors.firstName.message}</span>}\n                    </div>\n\n                    {/* Campo Sobrenome */}\n                    <div className='form flex'>\n                        <label htmlFor='sobrenome'>Sobrenome</label>\n                        <input\n                            {...register(\"lastName\", generateErrorMessage(\"Sobrenome\"))}\n                            placeholder=\"Sobrenome\"\n                            id='sobrenome'\n                            autoComplete='off'\n                            className={errors.lastName ? 'error' : ''}\n                        />\n                        {errors.lastName && <span classname='error-message'>{errors.lastName.message}</span>}\n                    </div>\n\n                    {/* Campo E-mail */}\n                    <div className='form flex'>\n                        <label htmlfor='email'>E-mail</label>\n                        <input\n                            {...register(\"email\", generateErrorMessage(\"E-mail\"))}\n                            placeholder=\"E-mail\"\n                            id='email'\n                            autoComplete='off'\n                            className={errors.email ? 'error' : ''}/>\n                            {errors.email && <span className='error.message'>{errors.email.message}</span>}\n                    </div>\n\n                    {/* Campo Senha */}\n                    <div className='form flex'>\n                        <label htmlfor='password'>Senha</label>\n                        <div className=\"password-input-container\">\n                            <input\n                                {...register(\"password\", generateErrorMessage(\"Senha\"))}\n                                placeholder=\"Senha\"\n                                id='password'\n                                autoComplete='off'\n                                type={status.showPassword ? 'text': 'password'}\n                                className={errors.password ? 'error' : ''}\n                            />\n\n                            <button\n                                type=\"button\" //Define o tipo do botão como \"button\" para evitar comportamento padrão de envio de formulário\n                                className='password-toggle'// Adicionar a classe CSS 'passwor\n                                onClick={() => setStatus({...status, showPassword: !status.showPassword})}\n                            >\n                                {status.showPassword ? <i className='fas fa-eye'></i> : <i className='fas fa-eye-slash'></i>}\n                                {}\n                            </button>\n\n                        </div>\n                            {errors.password && <span className='error-message'>{errors.password.message}</span>}\n                    </div>\n\n                    {/* Botão Enviar */}\n                    <button className='btn' type='submit' disabled={status.loading}>\n                        {status.loading ? 'Enviando...' : 'Enviar'}\n                    </button>\n                    </form>\n                    {status.loading && <p>Carregando...</p> }\n                </section>\n            </div>\n        )}\n    </div>\n  );\n}\n\n// Exporta componente \"MyForm\"\nexport default MyForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}